Traceback (most recent call last):
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import xarray as xr
import fsspec

fs = fsspec.filesystem(
    "reference", 
    fo='s3://noaa-oar-cefi-regional-mom6-pds/northwest_atlantic/full_domain/hindcast/monthly/regrid/r20230520/ssh.nwa.full.hcast.monthly.regrid.r20230520.199301-201912.json',
    remote_protocol="s3", 
    remote_options={"anon":True}
)
 
ds = xr.open_dataset(fs.get_mapper(""), engine='zarr',backend_kwargs={"consolidated": False})
------------------


[31m---------------------------------------------------------------------------[39m
[31mNoCredentialsError[39m                        Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[20][39m[32m, line 11[39m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mfsspec[39;00m
[32m      4[39m fs = fsspec.filesystem(
[32m      5[39m     [33m"[39m[33mreference[39m[33m"[39m, 
[32m      6[39m     fo=[33m'[39m[33ms3://noaa-oar-cefi-regional-mom6-pds/northwest_atlantic/full_domain/hindcast/monthly/regrid/r20230520/ssh.nwa.full.hcast.monthly.regrid.r20230520.199301-201912.json[39m[33m'[39m,
[32m      7[39m     remote_protocol=[33m"[39m[33ms3[39m[33m"[39m, 
[32m      8[39m     remote_options={[33m"[39m[33manon[39m[33m"[39m:[38;5;28;01mTrue[39;00m}
[32m      9[39m )
[32m---> [39m[32m11[39m ds = [43mxr[49m[43m.[49m[43mopen_dataset[49m[43m([49m[43mfs[49m[43m.[49m[43mget_mapper[49m[43m([49m[33;43m"[39;49m[33;43m"[39;49m[43m)[49m[43m,[49m[43m [49m[43mengine[49m[43m=[49m[33;43m'[39;49m[33;43mzarr[39;49m[33;43m'[39;49m[43m,[49m[43mbackend_kwargs[49m[43m=[49m[43m{[49m[33;43m"[39;49m[33;43mconsolidated[39;49m[33;43m"[39;49m[43m:[49m[43m [49m[38;5;28;43;01mFalse[39;49;00m[43m}[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/xarray/backends/api.py:715[39m, in [36mopen_dataset[39m[34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, create_default_indexes, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)[39m
[32m    703[39m decoders = _resolve_decoders_kwargs(
[32m    704[39m     decode_cf,
[32m    705[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,
[32m   (...)[39m[32m    711[39m     decode_coords=decode_coords,
[32m    712[39m )
[32m    714[39m overwrite_encoded_chunks = kwargs.pop([33m"[39m[33moverwrite_encoded_chunks[39m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m--> [39m[32m715[39m backend_ds = [43mbackend[49m[43m.[49m[43mopen_dataset[49m[43m([49m
[32m    716[39m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[32m    717[39m [43m    [49m[43mdrop_variables[49m[43m=[49m[43mdrop_variables[49m[43m,[49m
[32m    718[39m [43m    [49m[43m*[49m[43m*[49m[43mdecoders[49m[43m,[49m
[32m    719[39m [43m    [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m,[49m
[32m    720[39m [43m[49m[43m)[49m
[32m    721[39m ds = _dataset_from_backend_dataset(
[32m    722[39m     backend_ds,
[32m    723[39m     filename_or_obj,
[32m   (...)[39m[32m    734[39m     **kwargs,
[32m    735[39m )
[32m    736[39m [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/xarray/backends/zarr.py:1587[39m, in [36mZarrBackendEntrypoint.open_dataset[39m[34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, synchronizer, consolidated, chunk_store, storage_options, zarr_version, zarr_format, store, engine, use_zarr_fill_value_as_mask, cache_members)[39m
[32m   1585[39m filename_or_obj = _normalize_path(filename_or_obj)
[32m   1586[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m store:
[32m-> [39m[32m1587[39m     store = [43mZarrStore[49m[43m.[49m[43mopen_group[49m[43m([49m
[32m   1588[39m [43m        [49m[43mfilename_or_obj[49m[43m,[49m
[32m   1589[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m   1590[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m   1591[39m [43m        [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m   1592[39m [43m        [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m   1593[39m [43m        [49m[43mconsolidate_on_close[49m[43m=[49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[32m   1594[39m [43m        [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m   1595[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m   1596[39m [43m        [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m   1597[39m [43m        [49m[43muse_zarr_fill_value_as_mask[49m[43m=[49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[32m   1598[39m [43m        [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m   1599[39m [43m        [49m[43mcache_members[49m[43m=[49m[43mcache_members[49m[43m,[49m
[32m   1600[39m [43m    [49m[43m)[49m
[32m   1602[39m store_entrypoint = StoreBackendEntrypoint()
[32m   1603[39m [38;5;28;01mwith[39;00m close_on_error(store):

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/xarray/backends/zarr.py:664[39m, in [36mZarrStore.open_group[39m[34m(cls, store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, append_dim, write_region, safe_chunks, align_chunks, zarr_version, zarr_format, use_zarr_fill_value_as_mask, write_empty, cache_members)[39m
[32m    638[39m [38;5;129m@classmethod[39m
[32m    639[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_group[39m(
[32m    640[39m     [38;5;28mcls[39m,
[32m   (...)[39m[32m    657[39m     cache_members: [38;5;28mbool[39m = [38;5;28;01mTrue[39;00m,
[32m    658[39m ):
[32m    659[39m     (
[32m    660[39m         zarr_group,
[32m    661[39m         consolidate_on_close,
[32m    662[39m         close_store_on_close,
[32m    663[39m         use_zarr_fill_value_as_mask,
[32m--> [39m[32m664[39m     ) = [43m_get_open_params[49m[43m([49m
[32m    665[39m [43m        [49m[43mstore[49m[43m=[49m[43mstore[49m[43m,[49m
[32m    666[39m [43m        [49m[43mmode[49m[43m=[49m[43mmode[49m[43m,[49m
[32m    667[39m [43m        [49m[43msynchronizer[49m[43m=[49m[43msynchronizer[49m[43m,[49m
[32m    668[39m [43m        [49m[43mgroup[49m[43m=[49m[43mgroup[49m[43m,[49m
[32m    669[39m [43m        [49m[43mconsolidated[49m[43m=[49m[43mconsolidated[49m[43m,[49m
[32m    670[39m [43m        [49m[43mconsolidate_on_close[49m[43m=[49m[43mconsolidate_on_close[49m[43m,[49m
[32m    671[39m [43m        [49m[43mchunk_store[49m[43m=[49m[43mchunk_store[49m[43m,[49m
[32m    672[39m [43m        [49m[43mstorage_options[49m[43m=[49m[43mstorage_options[49m[43m,[49m
[32m    673[39m [43m        [49m[43mzarr_version[49m[43m=[49m[43mzarr_version[49m[43m,[49m
[32m    674[39m [43m        [49m[43muse_zarr_fill_value_as_mask[49m[43m=[49m[43muse_zarr_fill_value_as_mask[49m[43m,[49m
[32m    675[39m [43m        [49m[43mzarr_format[49m[43m=[49m[43mzarr_format[49m[43m,[49m
[32m    676[39m [43m    [49m[43m)[49m
[32m    678[39m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m(
[32m    679[39m         zarr_group,
[32m    680[39m         mode,
[32m   (...)[39m[32m    689[39m         cache_members=cache_members,
[32m    690[39m     )

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/xarray/backends/zarr.py:1829[39m, in [36m_get_open_params[39m[34m(store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, zarr_version, use_zarr_fill_value_as_mask, zarr_format)[39m
[32m   1825[39m     [38;5;28;01mif[39;00m _zarr_v3():
[32m   1826[39m         [38;5;66;03m# we have determined that we don't want to use consolidated metadata[39;00m
[32m   1827[39m         [38;5;66;03m# so we set that to False to avoid trying to read it[39;00m
[32m   1828[39m         open_kwargs[[33m"[39m[33muse_consolidated[39m[33m"[39m] = [38;5;28;01mFalse[39;00m
[32m-> [39m[32m1829[39m     zarr_group = [43mzarr[49m[43m.[49m[43mopen_group[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mopen_kwargs[49m[43m)[49m
[32m   1831[39m close_store_on_close = zarr_group.store [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m store
[32m   1833[39m [38;5;66;03m# we use this to determine how to handle fill_value[39;00m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/zarr/hierarchy.py:1575[39m, in [36mopen_group[39m[34m(store, mode, cache_attrs, synchronizer, path, chunk_store, storage_options, zarr_version, meta_array)[39m
[32m   1572[39m [38;5;66;03m# ensure store is initialized[39;00m
[32m   1574[39m [38;5;28;01mif[39;00m mode [38;5;129;01min[39;00m [[33m"[39m[33mr[39m[33m"[39m, [33m"[39m[33mr+[39m[33m"[39m]:
[32m-> [39m[32m1575[39m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [43mcontains_group[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43mpath[49m[43m=[49m[43mpath[49m[43m)[49m:
[32m   1576[39m         [38;5;28;01mif[39;00m contains_array(store, path=path):
[32m   1577[39m             [38;5;28;01mraise[39;00m ContainsArrayError(path)

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/zarr/storage.py:131[39m, in [36mcontains_group[39m[34m(store, path, explicit_only)[39m
[32m    129[39m store_version = [38;5;28mgetattr[39m(store, [33m"[39m[33m_store_version[39m[33m"[39m, [32m2[39m)
[32m    130[39m [38;5;28;01mif[39;00m store_version == [32m2[39m [38;5;129;01mor[39;00m explicit_only:
[32m--> [39m[32m131[39m     [38;5;28;01mreturn[39;00m [43mkey[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mstore[49m
[32m    132[39m [38;5;28;01melse[39;00m:
[32m    133[39m     [38;5;28;01mif[39;00m key [38;5;129;01min[39;00m store:

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/zarr/storage.py:1496[39m, in [36mFSStore.__contains__[39m[34m(self, key)[39m
[32m   1494[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__contains__[39m([38;5;28mself[39m, key):
[32m   1495[39m     key = [38;5;28mself[39m._normalize_key(key)
[32m-> [39m[32m1496[39m     [38;5;28;01mreturn[39;00m [43mkey[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mmap[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/mapping.py:193[39m, in [36mFSMap.__contains__[39m[34m(self, key)[39m
[32m    191[39m [38;5;250m[39m[33;03m"""Does key exist in mapping?"""[39;00m
[32m    192[39m path = [38;5;28mself[39m._key_to_str(key)
[32m--> [39m[32m193[39m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mfs[49m[43m.[49m[43misfile[49m[43m([49m[43mpath[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/implementations/reference.py:1171[39m, in [36mReferenceFileSystem.isfile[39m[34m(self, path)[39m
[32m   1170[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34misfile[39m([38;5;28mself[39m, path):  [38;5;66;03m# overwrite auto-sync version[39;00m
[32m-> [39m[32m1171[39m     [38;5;28;01mreturn[39;00m [43mpath[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mreferences[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/implementations/reference.py:577[39m, in [36mLazyReferenceMapper.__contains__[39m[34m(self, item)[39m
[32m    575[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__contains__[39m([38;5;28mself[39m, item):
[32m    576[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m577[39m         [38;5;28;43mself[39;49m[43m.[49m[43m_load_one_key[49m[43m([49m[43mitem[49m[43m)[49m
[32m    578[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mTrue[39;00m
[32m    579[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/implementations/reference.py:295[39m, in [36mLazyReferenceMapper._load_one_key[39m[34m(self, key)[39m
[32m    290[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_load_one_key[39m([38;5;28mself[39m, key):
[32m    291[39m [38;5;250m    [39m[33;03m"""Get the reference for one key[39;00m
[32m    292[39m 
[32m    293[39m [33;03m    Returns bytes, one-element list or three-element list.[39;00m
[32m    294[39m [33;03m    """[39;00m
[32m--> [39m[32m295[39m     [38;5;28;01mif[39;00m key [38;5;129;01min[39;00m [38;5;28;43mself[39;49m[43m.[49m[43m_items[49m:
[32m    296[39m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m._items[key]
[32m    297[39m     [38;5;28;01melif[39;00m key [38;5;129;01min[39;00m [38;5;28mself[39m.zmetadata:

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/implementations/reference.py:158[39m, in [36mLazyReferenceMapper.__getattr__[39m[34m(self, item)[39m
[32m    156[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__getattr__[39m([38;5;28mself[39m, item):
[32m    157[39m     [38;5;28;01mif[39;00m item [38;5;129;01min[39;00m ([33m"[39m[33m_items[39m[33m"[39m, [33m"[39m[33mrecord_size[39m[33m"[39m, [33m"[39m[33mzmetadata[39m[33m"[39m):
[32m--> [39m[32m158[39m         [38;5;28;43mself[39;49m[43m.[49m[43msetup[49m[43m([49m[43m)[49m
[32m    159[39m         [38;5;66;03m# avoid possible recursion if setup fails somehow[39;00m
[32m    160[39m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m.[34m__dict__[39m[item]

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/implementations/reference.py:165[39m, in [36mLazyReferenceMapper.setup[39m[34m(self)[39m
[32m    163[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34msetup[39m([38;5;28mself[39m):
[32m    164[39m     [38;5;28mself[39m._items = {}
[32m--> [39m[32m165[39m     [38;5;28mself[39m._items[[33m"[39m[33m.zmetadata[39m[33m"[39m] = [38;5;28;43mself[39;49m[43m.[49m[43mfs[49m[43m.[49m[43mcat_file[49m[43m([49m
[32m    166[39m [43m        [49m[33;43m"[39;49m[33;43m/[39;49m[33;43m"[39;49m[43m.[49m[43mjoin[49m[43m([49m[43m[[49m[38;5;28;43mself[39;49m[43m.[49m[43mroot[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43m.zmetadata[39;49m[33;43m"[39;49m[43m][49m[43m)[49m
[32m    167[39m [43m    [49m[43m)[49m
[32m    168[39m     met = json.loads([38;5;28mself[39m._items[[33m"[39m[33m.zmetadata[39m[33m"[39m])
[32m    169[39m     [38;5;28mself[39m.record_size = met[[33m"[39m[33mrecord_size[39m[33m"[39m]

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/asyn.py:118[39m, in [36msync_wrapper.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    115[39m [38;5;129m@functools[39m.wraps(func)
[32m    116[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper[39m(*args, **kwargs):
[32m    117[39m     [38;5;28mself[39m = obj [38;5;129;01mor[39;00m args[[32m0[39m]
[32m--> [39m[32m118[39m     [38;5;28;01mreturn[39;00m [43msync[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mloop[49m[43m,[49m[43m [49m[43mfunc[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/asyn.py:103[39m, in [36msync[39m[34m(loop, func, timeout, *args, **kwargs)[39m
[32m    101[39m     [38;5;28;01mraise[39;00m FSTimeoutError [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mreturn_result[39;00m
[32m    102[39m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[32m--> [39m[32m103[39m     [38;5;28;01mraise[39;00m return_result
[32m    104[39m [38;5;28;01melse[39;00m:
[32m    105[39m     [38;5;28;01mreturn[39;00m return_result

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/fsspec/asyn.py:56[39m, in [36m_runner[39m[34m(event, coro, result, timeout)[39m
[32m     54[39m     coro = asyncio.wait_for(coro, timeout=timeout)
[32m     55[39m [38;5;28;01mtry[39;00m:
[32m---> [39m[32m56[39m     result[[32m0[39m] = [38;5;28;01mawait[39;00m coro
[32m     57[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[32m     58[39m     result[[32m0[39m] = ex

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:1158[39m, in [36mS3FileSystem._cat_file[39m[34m(self, path, version_id, start, end)[39m
[32m   1155[39m     [38;5;28;01mfinally[39;00m:
[32m   1156[39m         resp[[33m"[39m[33mBody[39m[33m"[39m].close()
[32m-> [39m[32m1158[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(_call_and_read, retries=[38;5;28mself[39m.retries)

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:146[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    144[39m         err = e
[32m    145[39m err = translate_boto_error(err)
[32m--> [39m[32m146[39m [38;5;28;01mraise[39;00m err

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:114[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    112[39m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(retries):
[32m    113[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m114[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func(*args, **kwargs)
[32m    115[39m     [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:
[32m    116[39m         err = e

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:1145[39m, in [36mS3FileSystem._cat_file.<locals>._call_and_read[39m[34m()[39m
[32m   1144[39m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_call_and_read[39m():
[32m-> [39m[32m1145[39m     resp = [38;5;28;01mawait[39;00m [38;5;28mself[39m._call_s3(
[32m   1146[39m         [33m"[39m[33mget_object[39m[33m"[39m,
[32m   1147[39m         Bucket=bucket,
[32m   1148[39m         Key=key,
[32m   1149[39m         **version_id_kw(version_id [38;5;129;01mor[39;00m vers),
[32m   1150[39m         **head,
[32m   1151[39m         **[38;5;28mself[39m.req_kw,
[32m   1152[39m     )
[32m   1153[39m     [38;5;28;01mtry[39;00m:
[32m   1154[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m resp[[33m"[39m[33mBody[39m[33m"[39m].read()

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:371[39m, in [36mS3FileSystem._call_s3[39m[34m(self, method, *akwarglist, **kwargs)[39m
[32m    369[39m logger.debug([33m"[39m[33mCALL: [39m[38;5;132;01m%s[39;00m[33m - [39m[38;5;132;01m%s[39;00m[33m - [39m[38;5;132;01m%s[39;00m[33m"[39m, method.[34m__name__[39m, akwarglist, kw2)
[32m    370[39m additional_kwargs = [38;5;28mself[39m._get_s3_method_kwargs(method, *akwarglist, **kwargs)
[32m--> [39m[32m371[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(
[32m    372[39m     method, kwargs=additional_kwargs, retries=[38;5;28mself[39m.retries
[32m    373[39m )

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:146[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    144[39m         err = e
[32m    145[39m err = translate_boto_error(err)
[32m--> [39m[32m146[39m [38;5;28;01mraise[39;00m err

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/s3fs/core.py:114[39m, in [36m_error_wrapper[39m[34m(func, args, kwargs, retries)[39m
[32m    112[39m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(retries):
[32m    113[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m114[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func(*args, **kwargs)
[32m    115[39m     [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:
[32m    116[39m         err = e

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/context.py:36[39m, in [36mwith_current_context.<locals>.decorator.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m     34[39m [38;5;28;01mif[39;00m hook:
[32m     35[39m     [38;5;28;01mawait[39;00m resolve_awaitable(hook())
[32m---> [39m[32m36[39m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func(*args, **kwargs)

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/client.py:406[39m, in [36mAioBaseClient._make_api_call[39m[34m(self, operation_name, api_params)[39m
[32m    402[39m     maybe_compress_request(
[32m    403[39m         [38;5;28mself[39m.meta.config, request_dict, operation_model
[32m    404[39m     )
[32m    405[39m     apply_request_checksum(request_dict)
[32m--> [39m[32m406[39m     http, parsed_response = [38;5;28;01mawait[39;00m [38;5;28mself[39m._make_request(
[32m    407[39m         operation_model, request_dict, request_context
[32m    408[39m     )
[32m    410[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m.meta.events.emit(
[32m    411[39m     [33mf[39m[33m'[39m[33mafter-call.[39m[38;5;132;01m{[39;00mservice_id[38;5;132;01m}[39;00m[33m.[39m[38;5;132;01m{[39;00moperation_name[38;5;132;01m}[39;00m[33m'[39m,
[32m    412[39m     http_response=http,
[32m   (...)[39m[32m    415[39m     context=request_context,
[32m    416[39m )
[32m    418[39m [38;5;28;01mif[39;00m http.status_code >= [32m300[39m:

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/client.py:432[39m, in [36mAioBaseClient._make_request[39m[34m(self, operation_model, request_dict, request_context)[39m
[32m    428[39m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_make_request[39m(
[32m    429[39m     [38;5;28mself[39m, operation_model, request_dict, request_context
[32m    430[39m ):
[32m    431[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m432[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m._endpoint.make_request(
[32m    433[39m             operation_model, request_dict
[32m    434[39m         )
[32m    435[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m e:
[32m    436[39m         [38;5;28;01mawait[39;00m [38;5;28mself[39m.meta.events.emit(
[32m    437[39m             [33mf[39m[33m'[39m[33mafter-call-error.[39m[38;5;132;01m{[39;00m[38;5;28mself[39m._service_model.service_id.hyphenize()[38;5;132;01m}[39;00m[33m.[39m[38;5;132;01m{[39;00moperation_model.name[38;5;132;01m}[39;00m[33m'[39m,
[32m    438[39m             exception=e,
[32m    439[39m             context=request_context,
[32m    440[39m         )

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/endpoint.py:116[39m, in [36mAioEndpoint._send_request[39m[34m(self, request_dict, operation_model)[39m
[32m    114[39m context = request_dict[[33m'[39m[33mcontext[39m[33m'[39m]
[32m    115[39m [38;5;28mself[39m._update_retries_context(context, attempts)
[32m--> [39m[32m116[39m request = [38;5;28;01mawait[39;00m [38;5;28mself[39m.create_request(request_dict, operation_model)
[32m    117[39m success_response, exception = [38;5;28;01mawait[39;00m [38;5;28mself[39m._get_response(
[32m    118[39m     request, operation_model, context
[32m    119[39m )
[32m    120[39m [38;5;28;01mwhile[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m._needs_retry(
[32m    121[39m     attempts,
[32m    122[39m     operation_model,
[32m   (...)[39m[32m    125[39m     exception,
[32m    126[39m ):

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/endpoint.py:104[39m, in [36mAioEndpoint.create_request[39m[34m(self, params, operation_model)[39m
[32m    102[39m     service_id = operation_model.service_model.service_id.hyphenize()
[32m    103[39m     event_name = [33mf[39m[33m'[39m[33mrequest-created.[39m[38;5;132;01m{[39;00mservice_id[38;5;132;01m}[39;00m[33m.[39m[38;5;132;01m{[39;00moperation_model.name[38;5;132;01m}[39;00m[33m'[39m
[32m--> [39m[32m104[39m     [38;5;28;01mawait[39;00m [38;5;28mself[39m._event_emitter.emit(
[32m    105[39m         event_name,
[32m    106[39m         request=request,
[32m    107[39m         operation_name=operation_model.name,
[32m    108[39m     )
[32m    109[39m prepared_request = [38;5;28mself[39m.prepare_request(request)
[32m    110[39m [38;5;28;01mreturn[39;00m prepared_request

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/hooks.py:68[39m, in [36mAioHierarchicalEmitter._emit[39m[34m(self, event_name, kwargs, stop_on_response)[39m
[32m     65[39m logger.debug([33m'[39m[33mEvent [39m[38;5;132;01m%s[39;00m[33m: calling handler [39m[38;5;132;01m%s[39;00m[33m'[39m, event_name, handler)
[32m     67[39m [38;5;66;03m# Await the handler if its a coroutine.[39;00m
[32m---> [39m[32m68[39m response = [38;5;28;01mawait[39;00m resolve_awaitable(handler(**kwargs))
[32m     69[39m responses.append((handler, response))
[32m     70[39m [38;5;28;01mif[39;00m stop_on_response [38;5;129;01mand[39;00m response [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/_helpers.py:6[39m, in [36mresolve_awaitable[39m[34m(obj)[39m
[32m      4[39m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mresolve_awaitable[39m(obj):
[32m      5[39m     [38;5;28;01mif[39;00m inspect.isawaitable(obj):
[32m----> [39m[32m6[39m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m obj
[32m      8[39m     [38;5;28;01mreturn[39;00m obj

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/signers.py:25[39m, in [36mAioRequestSigner.handler[39m[34m(self, operation_name, request, **kwargs)[39m
[32m     20[39m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mhandler[39m([38;5;28mself[39m, operation_name=[38;5;28;01mNone[39;00m, request=[38;5;28;01mNone[39;00m, **kwargs):
[32m     21[39m     [38;5;66;03m# This is typically hooked up to the "request-created" event[39;00m
[32m     22[39m     [38;5;66;03m# from a client's event emitter.  When a new request is created[39;00m
[32m     23[39m     [38;5;66;03m# this method is invoked to sign the request.[39;00m
[32m     24[39m     [38;5;66;03m# Don't call this method directly.[39;00m
[32m---> [39m[32m25[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m.sign(operation_name, request)

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/aiobotocore/signers.py:91[39m, in [36mAioRequestSigner.sign[39m[34m(self, operation_name, request, region_name, signing_type, expires_in, signing_name)[39m
[32m     88[39m     [38;5;28;01melse[39;00m:
[32m     89[39m         [38;5;28;01mraise[39;00m e
[32m---> [39m[32m91[39m [43mauth[49m[43m.[49m[43madd_auth[49m[43m([49m[43mrequest[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/regional-mom6-dev/lib/python3.11/site-packages/botocore/auth.py:421[39m, in [36mSigV4Auth.add_auth[39m[34m(self, request)[39m
[32m    419[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34madd_auth[39m([38;5;28mself[39m, request):
[32m    420[39m     [38;5;28;01mif[39;00m [38;5;28mself[39m.credentials [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m--> [39m[32m421[39m         [38;5;28;01mraise[39;00m NoCredentialsError()
[32m    422[39m     datetime_now = datetime.datetime.utcnow()
[32m    423[39m     request.context[[33m'[39m[33mtimestamp[39m[33m'[39m] = datetime_now.strftime(SIGV4_TIMESTAMP)

[31mNoCredentialsError[39m: Unable to locate credentials

